{"ast":null,"code":"var _jsxFileName = \"/Users/noamdelmar/Desktop/shablul/client/src/components/GameClient/GameClient.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"../Game/Game.css\";\nimport { kahoot } from \"../../const/fakeDatabase\";\nimport { SettingsRemoteOutlined } from \"@material-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GameClient() {\n  _s();\n\n  const [answerChoice, setChoice] = useState();\n  let array = kahoot[0].games[0].quastions[0];\n\n  const isRight = answer => {\n    if (array.rightAnswer == answer) {\n      setChoice(answer);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"right\",\n    style: {\n      backgroundColor: answerChoice == array.rightAnswer ? \"green\" : \"red\"\n    },\n    children: !answerChoice ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answers_create\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer_client answer1\",\n        onClick: () => {\n          isRight();\n        },\n        children: array.answers[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer_client answer2\",\n        onClick: () => {\n          isRight();\n        },\n        children: array.answers[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer_client answer3\",\n        onClick: () => {\n          isRight();\n        },\n        children: array.answers[2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer_client answer4\",\n        onClick: () => {\n          isRight();\n        },\n        children: array.answers[3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GameClient, \"leaISrBet/xqzYN0DrwSywKLQes=\");\n\n_c = GameClient;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameClient\");","map":{"version":3,"sources":["/Users/noamdelmar/Desktop/shablul/client/src/components/GameClient/GameClient.jsx"],"names":["React","useState","kahoot","SettingsRemoteOutlined","GameClient","answerChoice","setChoice","array","games","quastions","isRight","answer","rightAnswer","backgroundColor","answers"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,kBAAP;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA,SAASC,sBAAT,QAAuC,oBAAvC;;AAGA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACjC,QAAM,CAACC,YAAD,EAAeC,SAAf,IAA4BL,QAAQ,EAA1C;AACA,MAAIM,KAAK,GAAGL,MAAM,CAAC,CAAD,CAAN,CAAUM,KAAV,CAAgB,CAAhB,EAAmBC,SAAnB,CAA6B,CAA7B,CAAZ;;AAEA,QAAMC,OAAO,GAAIC,MAAD,IAAY;AACxB,QAAGJ,KAAK,CAACK,WAAN,IAAqBD,MAAxB,EAA+B;AAC3BL,MAAAA,SAAS,CAACK,MAAD,CAAT;AACH;AAEJ,GALD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAuB,IAAA,KAAK,EAAE;AAAEE,MAAAA,eAAe,EAAER,YAAY,IAAIE,KAAK,CAACK,WAAtB,GAAoC,OAApC,GAA8C;AAAjE,KAA9B;AAAA,cACK,CAACP,YAAD,gBACG;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAuC,QAAA,OAAO,EAAE,MAAM;AAAEK,UAAAA,OAAO;AAAI,SAAnE;AAAA,kBAAsEH,KAAK,CAACO,OAAN,CAAc,CAAd;AAAtE;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAuC,QAAA,OAAO,EAAE,MAAM;AAAEJ,UAAAA,OAAO;AAAI,SAAnE;AAAA,kBAAsEH,KAAK,CAACO,OAAN,CAAc,CAAd;AAAtE;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAuC,QAAA,OAAO,EAAE,MAAM;AAAEJ,UAAAA,OAAO;AAAI,SAAnE;AAAA,kBAAsEH,KAAK,CAACO,OAAN,CAAc,CAAd;AAAtE;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAuC,QAAA,OAAO,EAAE,MAAM;AAAEJ,UAAAA,OAAO;AAAI,SAAnE;AAAA,kBAAsEH,KAAK,CAACO,OAAN,CAAc,CAAd;AAAtE;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,GAMY;AAPjB;AAAA;AAAA;AAAA;AAAA,UADJ;AAUE;;GApBkBV,U;;KAAAA,U","sourcesContent":["import React, { useState } from \"react\"\nimport \"../Game/Game.css\"\nimport { kahoot } from \"../../const/fakeDatabase\"\nimport { SettingsRemoteOutlined } from \"@material-ui/icons\"\n\n\nexport default function GameClient() {\n    const [answerChoice, setChoice] = useState()\n    let array = kahoot[0].games[0].quastions[0]\n\n    const isRight = (answer) => {\n        if(array.rightAnswer == answer){\n            setChoice(answer)\n        }\n\n    }\n    return (\n        <div className=\"right\" style={{ backgroundColor: answerChoice == array.rightAnswer ? \"green\" : \"red\" }}>\n            {!answerChoice ?\n                <div className=\"answers_create\">\n                    <div className=\"answer_client answer1\" onClick={() => { isRight() }}>{array.answers[0]}</div>\n                    <div className=\"answer_client answer2\" onClick={() => { isRight() }}>{array.answers[1]}</div>\n                    <div className=\"answer_client answer3\" onClick={() => { isRight() }}>{array.answers[2]}</div>\n                    <div className=\"answer_client answer4\" onClick={() => { isRight() }}>{array.answers[3]}</div>\n                </div> : null}\n        </div>\n    )}"]},"metadata":{},"sourceType":"module"}